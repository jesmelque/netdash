version: 2

aliases:
  - &fix_permissions
      run:
        name: Fix Permissions
        command: |
          sudo chown -R circleci:circleci /usr/local/bin
          sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
  - &restore_dependencies_cache
      restore_cache:
        key: deps10-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
  - &install_dependencies
      run:
        name: Install Dependencies
        command: |
          sudo pip install pipenv bandit flake8
          pipenv install
  - &update_dependencies_cache
      save_cache:
        key: deps10-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
        paths:
          - '.venv'
          - '/usr/local/bin'
          - '/usr/local/lib/python3.7/site-packages'
  - python_job_base: &python_job_base
      docker:
        - image: circleci/python:3.7.3
          environment:
            PIPENV_VENV_IN_PROJECT: "true"

jobs:
  check:
    <<: *python_job_base
    steps:
      - checkout
      - *fix_permissions
      - *restore_dependencies_cache
      - *install_dependencies
      - *update_dependencies_cache
      - run: bandit -r src/netdash -x src/netdash/netdash/\*example\*.py
      - run: flake8 src/netdash
      - run: cp src/netdash/netdash/settings_example.py src/netdash/netdash/settings.py
      - run: pipenv run python src/netdash/manage.py test
  # publish:
  #   environment:
  #     IMAGE_NAME: src/netdash/netdash/\*example\*.py
  #   docker:
  #     - image: circleci/buildpack-deps:stretch
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - run: docker build -t $IMAGE_NAME:latest .
  #     - run: |
  #         echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  #         docker push $IMAGE_NAME:latest

workflows:
  version: 2
  commit:
    jobs:
      - check

#     jobs:
#       - check:
#           filters:
#             tags:
#               only: /.*/
#       - publish-tag
#           requires:
#             - check
#           filters:
#             tags:
#               only: /.*/
